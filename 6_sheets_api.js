function getUserSheet(chatId) {
  const userData = getUserData(chatId);
  const sheetId = userData.sheetId;
  if (!sheetId) {
    sendText(chatId, "–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –µ–µ —Å–æ–∑–¥–∞–Ω–∏—è.");
    return null;
  }
  try {
    return SpreadsheetApp.openById(sheetId);
  } catch (e) {
    Logger.log(`–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId} —Å ID ${sheetId}: ${e.message}`);
    sendText(chatId, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤–∞—à—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –¥–∞–Ω–Ω—ã—Ö. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.");
    return null;
  }
}

// --- –§—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã ---
function sendTodayMenu(chatId) {
  const sheet = getUserSheet(chatId);
  if (!sheet) return;
  const menuSheet = sheet.getSheetByName("–ú–µ–Ω—é –ø–æ –¥–Ω—è–º");
  const today = new Date();
  const dayNum = (today.getDate() % 20) + 1;
  const data = menuSheet.getDataRange().getValues();
  const row = data.find(r => r[0] === dayNum);
  if (!row) return sendText(chatId, "–ú–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", getMenu(chatId));

  const [_, zavtrak, perk1, obed, perk2, uzhin, kcal, cost] = row;
  const text = `üçΩ *–ú–µ–Ω—é –Ω–∞ –¥–µ–Ω—å ${dayNum}*\n\n` +
    `*–ó–∞–≤—Ç—Ä–∞–∫:* ${zavtrak}\n` +
    `*–ü–µ—Ä–µ–∫—É—Å 1:* ${perk1}\n` +
    `*–û–±–µ–¥:* ${obed}\n` +
    `*–ü–µ—Ä–µ–∫—É—Å 2:* ${perk2}\n` +
    `*–£–∂–∏–Ω:* ${uzhin}\n\n` +
    `–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å: *${kcal} –∫–∫–∞–ª*\n–°—Ç–æ–∏–º–æ—Å—Ç—å: *${cost} ‚ÇΩ*`;

  sendText(chatId, text, getMenu(chatId));
}

function sendShoppingList(chatId) {
  const sheet = getUserSheet(chatId);
  if (!sheet) return;
  const shopSheet = sheet.getSheetByName("–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫");
  const data = shopSheet.getDataRange().getValues();
  const today = new Date().toLocaleDateString("ru-RU");
  const todayItems = data.filter(r => r[0] === today);

  if (!todayItems.length) return sendText(chatId, "–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –ø—É—Å—Ç.", getMenu(chatId));

  const list = todayItems.map(r => `‚òê ${r[1]} ‚Äî ${r[3]} ${r[2]}`).join("\n");
  sendText(chatId, `üõí *–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –Ω–∞ ${today}*\n\n${list}`, getMenu(chatId));
}

function sendCookingList(chatId) {
  const sheet = getUserSheet(chatId);
  if (!sheet) return;
  const cookSheet = sheet.getSheetByName("–ì–æ—Ç–æ–≤–∫–∞");
  const data = cookSheet.getDataRange().getValues();
  const today = new Date().toLocaleDateString("ru-RU");
  const todayCook = data.filter(r => r[0] === today);

  if (!todayCook.length) return sendText(chatId, "–°–µ–≥–æ–¥–Ω—è –Ω–∏—á–µ–≥–æ –≥–æ—Ç–æ–≤–∏—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.", getMenu(chatId));

  const list = todayCook.map(r => `üç≤ ${r[1]} ‚Äî –∏–∑: ${r[2]} –Ω–∞ ${r[3]} –¥–Ω–µ–π`).join("\n");
  sendText(chatId, `üë®‚Äçüç≥ *–°–µ–≥–æ–¥–Ω—è –≥–æ—Ç–æ–≤–∏–º:*\n\n${list}`, getMenu(chatId));
}

function sendSubstitute(chatId, msg) {
  const sheet = getUserSheet(chatId);
  if (!sheet) return;
  const subSheet = sheet.getSheetByName("–ó–∞–º–µ–Ω—ã");
  const parts = msg.split(" ");
  if (parts.length < 3) return sendText(chatId, "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç –ø–æ—Å–ª–µ —Å–ª–æ–≤–∞ '–∑–∞–º–µ–Ω–∞', –Ω–∞–ø—Ä–∏–º–µ—Ä:\nüîÑ –∑–∞–º–µ–Ω–∞ —Ç–≤–æ—Ä–æ–≥", getMenu(chatId));
  const target = parts.slice(2).join(" ").toLowerCase();

  const data = subSheet.getDataRange().getValues();
  const row = data.find(r => r[0].toLowerCase() === target);

  if (!row) return sendText(chatId, `–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–º–µ–Ω–∞—Ö –¥–ª—è "${target}".`, getMenu(chatId));

  const substitutes = row.slice(1).filter(v => v);
  const list = substitutes.map(s => `üîÅ ${s}`).join("\n");
  const text = `‚ôªÔ∏è –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–∞–º–µ–Ω—ã –¥–ª—è *${target}*:*\n\n${list}`;

  sendText(chatId, text, getMenu(chatId));
}

// --- –ê–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
function sendDailyNotifications() {
  const allUsers = getAllUsers();
  const now = new Date();
  const nowStr = Utilities.formatDate(now, "GMT+3", "HH:mm");

  allUsers.forEach(chatId => {
    const userData = getUserData(chatId);
    if (userData.notifyTime === nowStr) {
      sendTodayMenu(chatId);
      sendShoppingList(chatId);
      sendCookingList(chatId);
    }
  });
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ AI –º–µ–Ω—é –≤ —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string|number} chatId - ID —á–∞—Ç–∞.
 * @param {object} menu - –û–±—ä–µ–∫—Ç –º–µ–Ω—é, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π AI.
 */
function saveMenuToSheet(chatId, menu) {
  const sheet = getUserSheet(chatId);
  if (!sheet) return;

  let menuSheet = sheet.getSheetByName("–ú–µ–Ω—é –æ—Ç AI");
  if (!menuSheet) {
    menuSheet = sheet.insertSheet("–ú–µ–Ω—é –æ—Ç AI");
    menuSheet.appendRow(["–î–∞—Ç–∞", "–ü—Ä–∏–µ–º –ø–∏—â–∏", "–ë–ª—é–¥–æ", "–û–ø–∏—Å–∞–Ω–∏–µ", "–ö–∫–∞–ª", "–ë–µ–ª–∫–∏", "–ñ–∏—Ä—ã", "–£–≥–ª–µ–≤–æ–¥—ã", "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"]);
  }

  const today = new Date().toLocaleDateString("ru-RU");
  menu.meals.forEach(meal => {
    menuSheet.appendRow([
      today,
      meal.name,
      meal.recipe_name,
      meal.description,
      meal.calories,
      meal.proteins,
      meal.fats,
      meal.carbs,
      meal.ingredients.map(i => `${i.name} (${i.amount})`).join(", "),
      meal.instructions.join("\n")
    ]);
  });

  sendText(chatId, "‚úÖ –ú–µ–Ω—é —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –≤–∞—à—É Google –¢–∞–±–ª–∏—Ü—É.", getMenu(chatId));
}

/**
 * –£–õ–£–ß–®–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –õ–ò–°–¢–ê–ú–ò –ò –¢–ê–ë–õ–ò–¶–ê–ú–ò
 * –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–∏—Å—Ç–µ–º—ã –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
 * –ù–ï –ó–ê–¢–†–ê–ì–ò–í–ê–ï–¢ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
function setupCompleteInfrastructure() {
  Logger.log('üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ô –ù–ê–°–¢–†–û–ô–ö–ò –ò–ù–§–†–ê–°–¢–†–£–ö–¢–£–†–´ SmartPitanieBot');
  
  const results = {
    timestamp: new Date(),
    steps: [],
    created: [],
    restored: [],
    errors: [],
    success: false
  };

  try {
    const scriptProps = PropertiesService.getScriptProperties();
    
    // –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
    results.steps.push('–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞...');
    let rootFolderId = scriptProps.getProperty('ROOT_FOLDER_ID');
    if (!rootFolderId) {
      const rootFolder = DriveApp.createFolder('SmartPitanieBot_Project');
      rootFolderId = rootFolder.getId();
      scriptProps.setProperty('ROOT_FOLDER_ID', rootFolderId);
      results.created.push('–ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞: ' + rootFolderId);
    } else {
      results.restored.push('–ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ' + rootFolderId);
    }

    // –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    results.steps.push('–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    let usersFolderId = scriptProps.getProperty('USERS_FOLDER_ID');
    if (!usersFolderId) {
      const rootFolder = DriveApp.getFolderById(rootFolderId);
      const usersFolder = rootFolder.createFolder('Users');
      usersFolderId = usersFolder.getId();
      scriptProps.setProperty('USERS_FOLDER_ID', usersFolderId);
      results.created.push('–ü–∞–ø–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ' + usersFolderId);
    } else {
      results.restored.push('–ü–∞–ø–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ' + usersFolderId);
    }

    // –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞
    results.steps.push('–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞...');
    let dataFolderId = scriptProps.getProperty('DATA_FOLDER_ID');
    if (!dataFolderId) {
      const rootFolder = DriveApp.getFolderById(rootFolderId);
      const dataFolder = rootFolder.createFolder('ProjectData');
      dataFolderId = dataFolder.getId();
      scriptProps.setProperty('DATA_FOLDER_ID', dataFolderId);
      results.created.push('–ü–∞–ø–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞: ' + dataFolderId);
    } else {
      results.restored.push('–ü–∞–ø–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ' + dataFolderId);
    }

    // –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
    results.steps.push('–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã...');
    let templateId = scriptProps.getProperty('TEMPLATE_SHEET_ID');
    if (!templateId) {
      const templateSheet = SpreadsheetApp.create('Template_SmartPit_Sheet');
      templateId = templateSheet.getId();
      scriptProps.setProperty('TEMPLATE_SHEET_ID', templateId);
      
      // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –ø–∞–ø–∫—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞
      const dataFolder = DriveApp.getFolderById(dataFolderId);
      const templateFile = DriveApp.getFileById(templateId);
      templateFile.moveTo(dataFolder);
      
      results.created.push('–®–∞–±–ª–æ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞: ' + templateId);
    } else {
      results.restored.push('–®–∞–±–ª–æ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ' + templateId);
    }

    // –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    results.steps.push('–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    let usersSpreadsheetId = scriptProps.getProperty('USERS_SPREADSHEET_ID');
    if (!usersSpreadsheetId) {
      const usersSpreadsheet = SpreadsheetApp.create('SmartPit_Users_Database');
      usersSpreadsheetId = usersSpreadsheet.getId();
      scriptProps.setProperty('USERS_SPREADSHEET_ID', usersSpreadsheetId);
      
      // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –ø–∞–ø–∫—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞
      const dataFolder = DriveApp.getFolderById(dataFolderId);
      const usersFile = DriveApp.getFileById(usersSpreadsheetId);
      usersFile.moveTo(dataFolder);
      
      results.created.push('–¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ' + usersSpreadsheetId);
    } else {
      results.restored.push('–¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ' + usersSpreadsheetId);
    }

    // –®–∞–≥ 6: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º
    results.steps.push('–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º...');
    let projectManagerId = scriptProps.getProperty('PROJECT_MANAGER_ID');
    if (!projectManagerId) {
      const projectSpreadsheet = SpreadsheetApp.create('SmartPit_Project_Manager');
      projectManagerId = projectSpreadsheet.getId();
      scriptProps.setProperty('PROJECT_MANAGER_ID', projectManagerId);
      
      // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –ø–∞–ø–∫—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞
      const dataFolder = DriveApp.getFolderById(dataFolderId);
      const projectFile = DriveApp.getFileById(projectManagerId);
      projectFile.moveTo(dataFolder);
      
      results.created.push('–¢–∞–±–ª–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º: ' + projectManagerId);
    } else {
      results.restored.push('–¢–∞–±–ª–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ' + projectManagerId);
    }

    // –®–∞–≥ 7: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —à–∞–±–ª–æ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
    results.steps.push('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —à–∞–±–ª–æ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã...');
    const templateSheet = SpreadsheetApp.openById(templateId);
    setupTemplateStructure(templateSheet);
    results.created.push('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —à–∞–±–ª–æ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');

    // –®–∞–≥ 8: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    results.steps.push('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const usersSpreadsheet = SpreadsheetApp.openById(usersSpreadsheetId);
    setupUsersStructure(usersSpreadsheet);
    results.created.push('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');

    // –®–∞–≥ 9: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º
    results.steps.push('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º...');
    const projectSpreadsheet = SpreadsheetApp.openById(projectManagerId);
    setupProjectManagerStructure(projectSpreadsheet);
    results.created.push('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');

    results.success = results.errors.length === 0;
    Logger.log('‚úÖ –ü–û–õ–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –ò–ù–§–†–ê–°–¢–†–£–ö–¢–£–†–´ –ó–ê–í–ï–†–®–ï–ù–ê');

  } catch (error) {
    results.errors.push('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ' + error.message);
    Logger.log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ' + error.message);
  }

  return results;
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —à–∞–±–ª–æ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
 */
function setupTemplateStructure(templateSheet) {
  try {
    // –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ª–∏—Å—Ç—ã
    const requiredSheets = [
      '–ú–µ–Ω—é –ø–æ –¥–Ω—è–º', '–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫', '–ì–æ—Ç–æ–≤–∫–∞', '–ó–∞–º–µ–Ω—ã', 
      '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', '–õ–æ–≥–∏', '–ü—Ä–æ–¥—É–∫—Ç—ã', '–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏', '–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö'
    ];
    
    const existingSheets = templateSheet.getSheets().map(sheet => sheet.getName());
    
    // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
    const defaultSheet = templateSheet.getSheets()[0];
    if (defaultSheet.getName() !== requiredSheets[0]) {
      templateSheet.renameActiveSheet(requiredSheets[0]);
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ª–∏—Å—Ç—ã
    for (let i = 1; i < requiredSheets.length; i++) {
      if (!existingSheets.includes(requiredSheets[i])) {
        templateSheet.insertSheet(requiredSheets[i]);
      }
    }

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–∏—Å—Ç –ü—Ä–æ–¥—É–∫—Ç—ã
    const productsSheet = templateSheet.getSheetByName('–ü—Ä–æ–¥—É–∫—Ç—ã');
    if (productsSheet) {
      productsSheet.getRange('A1:F1').setValues([['–¢–∏–ø', '–ë–ª—é–¥–æ', '–ö–∞–ª–æ—Ä–∏–∏', '–ë–µ–ª–∫–∏', '–ñ–∏—Ä—ã', '–£–≥–ª–µ–≤–æ–¥—ã']]);
      productsSheet.getRange('A1:F1').setFontWeight('bold');
    }

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–∏—Å—Ç –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
    const testSheet = templateSheet.getSheetByName('–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏');
    if (testSheet) {
      testSheet.getRange('A1:B1').setValues([['–°–æ–æ–±—â–µ–Ω–∏–µ', '–î–µ–π—Å—Ç–≤–∏–µ']]);
      testSheet.getRange('A1:B1').setFontWeight('bold');
    }

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–∏—Å—Ç –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    const exportSheet = templateSheet.getSheetByName('–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö');
    if (exportSheet) {
      exportSheet.getRange('A1:D1').setValues([['–î–∞—Ç–∞', '–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö', '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ', '–°—Ç–∞—Ç—É—Å']]);
      exportSheet.getRange('A1:D1').setFontWeight('bold');
    }

  } catch (error) {
    Logger.log('–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —à–∞–±–ª–æ–Ω–∞: ' + error.message);
    throw error;
  }
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
function setupUsersStructure(usersSpreadsheet) {
  try {
    const usersSheet = usersSpreadsheet.getActiveSheet();
    usersSheet.setName('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏');
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const headers = [
      'ID', 'Bot', '–ò–º—è', '–§–∞–º–∏–ª–∏—è', 'Username', '–Ø–∑—ã–∫', 'Premium', 
      '–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', '–ü–∞–ø–∫–∞', '–¢–∞–±–ª–∏—Ü–∞', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–ê–¥–º–∏–Ω', '–°—Ç–∞—Ç—É—Å'
    ];
    
    usersSheet.getRange('A1:M1').setValues([headers]);
    usersSheet.getRange('A1:M1').setFontWeight('bold');
    
    // –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ª–∏—Å—Ç—ã
    const additionalSheets = ['–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '–õ–æ–≥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã'];
    
    additionalSheets.forEach(sheetName => {
      if (!usersSpreadsheet.getSheetByName(sheetName)) {
        usersSpreadsheet.insertSheet(sheetName);
      }
    });

  } catch (error) {
    Logger.log('–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ' + error.message);
    throw error;
  }
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º
 */
function setupProjectManagerStructure(projectSpreadsheet) {
  try {
    const mainSheet = projectSpreadsheet.getActiveSheet();
    mainSheet.setName('–ó–∞–¥–∞—á–∏');
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–¥–∞—á
    const taskHeaders = [
      'ID', '–ù–∞–∑–≤–∞–Ω–∏–µ', '–û–ø–∏—Å–∞–Ω–∏–µ', '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç', '–°—Ç–∞—Ç—É—Å', '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å', 
      '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è', '–î–µ–¥–ª–∞–π–Ω', '–ü—Ä–æ–≥—Ä–µ—Å—Å', '–¢–µ–≥–∏', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏'
    ];
    
    mainSheet.getRange('A1:K1').setValues([taskHeaders]);
    mainSheet.getRange('A1:K1').setFontWeight('bold');
    
    // –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ª–∏—Å—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º
    const projectSheets = [
      '–ü—Ä–æ–µ–∫—Ç—ã', '–ö–æ–º–∞–Ω–¥–∞', '–†–µ—Å—É—Ä—Å—ã', '–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏', '–†–∏—Å–∫–∏', 
      '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è', '–ú–µ—Ç—Ä–∏–∫–∏', '–û—Ç—á–µ—Ç—ã'
    ];
    
    projectSheets.forEach(sheetName => {
      if (!projectSpreadsheet.getSheetByName(sheetName)) {
        const newSheet = projectSpreadsheet.insertSheet(sheetName);
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ª–∏—Å—Ç–∞
        switch (sheetName) {
          case '–ü—Ä–æ–µ–∫—Ç—ã':
            newSheet.getRange('A1:E1').setValues([['ID', '–ù–∞–∑–≤–∞–Ω–∏–µ', '–û–ø–∏—Å–∞–Ω–∏–µ', '–°—Ç–∞—Ç—É—Å', '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è']]);
            break;
          case '–ö–æ–º–∞–Ω–¥–∞':
            newSheet.getRange('A1:D1').setValues([['ID', '–ò–º—è', '–†–æ–ª—å', 'Email']]);
            break;
          case '–ú–µ—Ç—Ä–∏–∫–∏':
            newSheet.getRange('A1:F1').setValues([['–î–∞—Ç–∞', '–ú–µ—Ç—Ä–∏–∫–∞', '–ó–Ω–∞—á–µ–Ω–∏–µ', '–¶–µ–ª—å', '–¢—Ä–µ–Ω–¥', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π']]);
            break;
          case '–û—Ç—á–µ—Ç—ã':
            newSheet.getRange('A1:E1').setValues([['–î–∞—Ç–∞', '–¢–∏–ø –æ—Ç—á–µ—Ç–∞', '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ', '–ê–≤—Ç–æ—Ä', '–°—Ç–∞—Ç—É—Å']]);
            break;
        }
        
        if (newSheet.getRange('A1').getValue()) {
          newSheet.getRange('A1:Z1').setFontWeight('bold');
        }
      }
    });

  } catch (error) {
    Logger.log('–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º: ' + error.message);
    throw error;
  }
}

/**
 * –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö
 */
function restoreTableStructure() {
  Logger.log('üîÑ –ó–ê–ü–£–°–ö –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –°–¢–†–£–ö–¢–£–†–´ –¢–ê–ë–õ–ò–¶');
  
  const results = {
    timestamp: new Date(),
    restored: [],
    errors: [],
    success: false
  };

  try {
    const scriptProps = PropertiesService.getScriptProperties();
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∞–±–ª–æ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
    const templateId = scriptProps.getProperty('TEMPLATE_SHEET_ID');
    if (templateId) {
      try {
        const templateSheet = SpreadsheetApp.openById(templateId);
        setupTemplateStructure(templateSheet);
        results.restored.push('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —à–∞–±–ª–æ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
      } catch (error) {
        results.errors.push('–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞: ' + error.message);
      }
    }

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const usersId = scriptProps.getProperty('USERS_SPREADSHEET_ID');
    if (usersId) {
      try {
        const usersSpreadsheet = SpreadsheetApp.openById(usersId);
        setupUsersStructure(usersSpreadsheet);
        results.restored.push('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
      } catch (error) {
        results.errors.push('–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ' + error.message);
      }
    }

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º
    const projectId = scriptProps.getProperty('PROJECT_MANAGER_ID');
    if (projectId) {
      try {
        const projectSpreadsheet = SpreadsheetApp.openById(projectId);
        setupProjectManagerStructure(projectSpreadsheet);
        results.restored.push('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
      } catch (error) {
        results.errors.push('–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º: ' + error.message);
      }
    }

    results.success = results.errors.length === 0;
    Logger.log('‚úÖ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –ó–ê–í–ï–†–®–ï–ù–û');

  } catch (error) {
    results.errors.push('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: ' + error.message);
    Logger.log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø: ' + error.message);
  }

  return results;
}