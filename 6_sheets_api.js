function getUserSheet(chatId) {
  const userData = getUserData(chatId);
  const sheetId = userData.sheetId;
  if (!sheetId) {
    sendText(chatId, "–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –µ–µ —Å–æ–∑–¥–∞–Ω–∏—è.");
    return null;
  }
  try {
    return SpreadsheetApp.openById(sheetId);
  } catch (e) {
    Logger.log(`–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId} —Å ID ${sheetId}: ${e.message}`);
    sendText(chatId, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –≤–∞—à—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –¥–∞–Ω–Ω—ã—Ö. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.");
    return null;
  }
}

// --- –§—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã ---
function sendTodayMenu(chatId) {
  const sheet = getUserSheet(chatId);
  if (!sheet) return;
  const menuSheet = sheet.getSheetByName("–ú–µ–Ω—é –ø–æ –¥–Ω—è–º");
  const today = new Date();
  const dayNum = (today.getDate() % 20) + 1;
  const data = menuSheet.getDataRange().getValues();
  const row = data.find(r => r[0] === dayNum);
  if (!row) return sendText(chatId, "–ú–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", getMenu(chatId));

  const [_, zavtrak, perk1, obed, perk2, uzhin, kcal, cost] = row;
  const text = `üçΩ *–ú–µ–Ω—é –Ω–∞ –¥–µ–Ω—å ${dayNum}*\n\n` +
    `*–ó–∞–≤—Ç—Ä–∞–∫:* ${zavtrak}\n` +
    `*–ü–µ—Ä–µ–∫—É—Å 1:* ${perk1}\n` +
    `*–û–±–µ–¥:* ${obed}\n` +
    `*–ü–µ—Ä–µ–∫—É—Å 2:* ${perk2}\n` +
    `*–£–∂–∏–Ω:* ${uzhin}\n\n` +
    `–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å: *${kcal} –∫–∫–∞–ª*\n–°—Ç–æ–∏–º–æ—Å—Ç—å: *${cost} ‚ÇΩ*`;

  sendText(chatId, text, getMenu(chatId));
}

function sendShoppingList(chatId) {
  const sheet = getUserSheet(chatId);
  if (!sheet) return;
  const shopSheet = sheet.getSheetByName("–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫");
  const data = shopSheet.getDataRange().getValues();
  const today = new Date().toLocaleDateString("ru-RU");
  const todayItems = data.filter(r => r[0] === today);

  if (!todayItems.length) return sendText(chatId, "–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –ø—É—Å—Ç.", getMenu(chatId));

  const list = todayItems.map(r => `‚òê ${r[1]} ‚Äî ${r[3]} ${r[2]}`).join("\n");
  sendText(chatId, `üõí *–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –Ω–∞ ${today}*\n\n${list}`, getMenu(chatId));
}

function sendCookingList(chatId) {
  const sheet = getUserSheet(chatId);
  if (!sheet) return;
  const cookSheet = sheet.getSheetByName("–ì–æ—Ç–æ–≤–∫–∞");
  const data = cookSheet.getDataRange().getValues();
  const today = new Date().toLocaleDateString("ru-RU");
  const todayCook = data.filter(r => r[0] === today);

  if (!todayCook.length) return sendText(chatId, "–°–µ–≥–æ–¥–Ω—è –Ω–∏—á–µ–≥–æ –≥–æ—Ç–æ–≤–∏—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.", getMenu(chatId));

  const list = todayCook.map(r => `üç≤ ${r[1]} ‚Äî –∏–∑: ${r[2]} –Ω–∞ ${r[3]} –¥–Ω–µ–π`).join("\n");
  sendText(chatId, `üë®‚Äçüç≥ *–°–µ–≥–æ–¥–Ω—è –≥–æ—Ç–æ–≤–∏–º:*\n\n${list}`, getMenu(chatId));
}

function sendSubstitute(chatId, msg) {
  const sheet = getUserSheet(chatId);
  if (!sheet) return;
  const subSheet = sheet.getSheetByName("–ó–∞–º–µ–Ω—ã");
  const parts = msg.split(" ");
  if (parts.length < 3) return sendText(chatId, "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç –ø–æ—Å–ª–µ —Å–ª–æ–≤–∞ '–∑–∞–º–µ–Ω–∞', –Ω–∞–ø—Ä–∏–º–µ—Ä:\nüîÑ –∑–∞–º–µ–Ω–∞ —Ç–≤–æ—Ä–æ–≥", getMenu(chatId));
  const target = parts.slice(2).join(" ").toLowerCase();

  const data = subSheet.getDataRange().getValues();
  const row = data.find(r => r[0].toLowerCase() === target);

  if (!row) return sendText(chatId, `–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–º–µ–Ω–∞—Ö –¥–ª—è "${target}".`, getMenu(chatId));

  const substitutes = row.slice(1).filter(v => v);
  const list = substitutes.map(s => `üîÅ ${s}`).join("\n");
  const text = `‚ôªÔ∏è –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–∞–º–µ–Ω—ã –¥–ª—è *${target}*:*\n\n${list}`;

  sendText(chatId, text, getMenu(chatId));
}

// --- –ê–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
function sendDailyNotifications() {
  const allUsers = getAllUsers();
  const now = new Date();
  const nowStr = Utilities.formatDate(now, "GMT+3", "HH:mm");

  allUsers.forEach(chatId => {
    const userData = getUserData(chatId);
    if (userData.notifyTime === nowStr) {
      sendTodayMenu(chatId);
      sendShoppingList(chatId);
      sendCookingList(chatId);
    }
  });
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ AI –º–µ–Ω—é –≤ —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param {string|number} chatId - ID —á–∞—Ç–∞.
 * @param {object} menu - –û–±—ä–µ–∫—Ç –º–µ–Ω—é, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π AI.
 */
function saveMenuToSheet(chatId, menu) {
  const sheet = getUserSheet(chatId);
  if (!sheet) return;

  let menuSheet = sheet.getSheetByName("–ú–µ–Ω—é –æ—Ç AI");
  if (!menuSheet) {
    menuSheet = sheet.insertSheet("–ú–µ–Ω—é –æ—Ç AI");
    menuSheet.appendRow(["–î–∞—Ç–∞", "–ü—Ä–∏–µ–º –ø–∏—â–∏", "–ë–ª—é–¥–æ", "–û–ø–∏—Å–∞–Ω–∏–µ", "–ö–∫–∞–ª", "–ë–µ–ª–∫–∏", "–ñ–∏—Ä—ã", "–£–≥–ª–µ–≤–æ–¥—ã", "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"]);
  }

  const today = new Date().toLocaleDateString("ru-RU");
  menu.meals.forEach(meal => {
    menuSheet.appendRow([
      today,
      meal.name,
      meal.recipe_name,
      meal.description,
      meal.calories,
      meal.proteins,
      meal.fats,
      meal.carbs,
      meal.ingredients.map(i => `${i.name} (${i.amount})`).join(", "),
      meal.instructions.join("\n")
    ]);
  });

  sendText(chatId, "‚úÖ –ú–µ–Ω—é —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –≤–∞—à—É Google –¢–∞–±–ª–∏—Ü—É.", getMenu(chatId));
}