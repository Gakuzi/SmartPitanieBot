/**
 * @file AI_assistant.js
 * @description –ú–æ–¥—É–ª—å –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –¥–ª—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞, –∑–∞–º–µ–Ω—è—é—â–∞—è DEBUG router
 * @param {Object} data - –î–∞–Ω–Ω—ã–µ –æ—Ç Telegram
 */
function aiAssistant(data) {
  try {
    let chatId = null;
    let messageText = '';
    let updateType = 'unknown';

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º chatId
    if (data.message) {
      updateType = 'message';
      chatId = data.message.chat.id;
      
      if (data.message.text) {
        messageText = data.message.text;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
        addToConversationHistory(chatId, 'user', messageText);
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ò–ò
        handleUserMessage(chatId, messageText, data.message.from);
        
      } else {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (—Ñ–æ—Ç–æ, –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Ç.–¥.)
        handleNonTextMessage(chatId, data.message);
      }
      
    } else if (data.callback_query) {
      updateType = 'callback_query';
      chatId = data.callback_query.from.id;
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback query
      handleCallbackQuery(data.callback_query);
      
    } else if (data.edited_message) {
      updateType = 'edited_message';
      chatId = data.edited_message.chat.id;
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–± –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
      sendText(chatId, "–Ø –∑–∞–º–µ—Ç–∏–ª, —á—Ç–æ –≤—ã –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —è –º–æ–≥ –≤–∞–º –ø–æ–º–æ—á—å.");
      
    } else {
      Logger.log('–ü–æ–ª—É—á–µ–Ω –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram');
      return;
    }

    Logger.log(`AI Assistant: –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${updateType} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`);

  } catch (error) {
    Logger.log(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ AI Assistant: ${error.message}\n–°—Ç–µ–∫: ${error.stack}`);
    
    // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if (chatId) {
      sendText(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.");
    }
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –ò–ò
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {string} messageText - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {Object} fromUser - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
 */
function handleUserMessage(chatId, messageText, fromUser) {
  try {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–ø–µ—á–∞—Ç–∞–µ—Ç"
    sendChatAction(chatId, 'typing');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userProfile = getUserProfile(chatId);
    
    // –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ /start, –∑–∞–ø—É—Å–∫–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
    if (messageText === '/start') {
      startAiOnboarding(chatId, fromUser, userProfile);
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é
    if (isMenuCommand(messageText)) {
      handleMenuCommand(chatId, messageText, userProfile);
      return;
    }
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–æ—à–µ–ª –æ–Ω–±–æ—Ä–¥–∏–Ω–≥, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –µ–≥–æ
    if (!userProfile.onboardingCompleted) {
      continueOnboarding(chatId, messageText, userProfile);
      return;
    }
    
    // –û–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ò–ò
    processMessageWithAI(chatId, messageText, userProfile);
    
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}: ${error.message}`);
    sendText(chatId, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π –º–µ–Ω—é
 * @param {string} messageText - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @returns {boolean} - True –µ—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –º–µ–Ω—é
 */
function isMenuCommand(messageText) {
  const menuCommands = [
    'üçΩ –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é', '–ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é', '/menu',
    'üõí —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫', '—Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫', '/shopping',
    '‚öôÔ∏è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏', '/settings',
    'üîÑ –∑–∞–º–µ–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞', '–∑–∞–º–µ–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞',
    'üë®‚Äçüç≥ —á—Ç–æ –≥–æ—Ç–æ–≤–∏–º', '—á—Ç–æ –≥–æ—Ç–æ–≤–∏–º', '/cooking',
    '/help', '–ø–æ–º–æ—â—å', '–º–µ–Ω—é'
  ];
  
  return menuCommands.some(cmd => messageText.toLowerCase().includes(cmd.toLowerCase()));
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {string} messageText - –¢–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleMenuCommand(chatId, messageText, userProfile) {
  try {
    const lowerText = messageText.toLowerCase();
    
    if (lowerText.includes('–ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é') || lowerText.includes('/menu')) {
      handleShowMenu(chatId, userProfile);
    } else if (lowerText.includes('—Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫') || lowerText.includes('/shopping')) {
      handleShoppingList(chatId, userProfile);
    } else if (lowerText.includes('–Ω–∞—Å—Ç—Ä–æ–π–∫–∏') || lowerText.includes('/settings')) {
      handleSettings(chatId, userProfile);
    } else if (lowerText.includes('–∑–∞–º–µ–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞')) {
      handleProductReplacement(chatId, messageText, userProfile);
    } else if (lowerText.includes('—á—Ç–æ –≥–æ—Ç–æ–≤–∏–º') || lowerText.includes('/cooking')) {
      handleCooking(chatId, userProfile);
    } else if (lowerText.includes('/help') || lowerText.includes('–ø–æ–º–æ—â—å')) {
      handleHelp(chatId, userProfile);
    } else if (lowerText === '–º–µ–Ω—é') {
      sendMainMenu(chatId);
    }
    
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é –¥–ª—è ${chatId}: ${error.message}`);
    sendText(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É "–ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é"
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleShowMenu(chatId, userProfile) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
    if (!userProfile.onboardingCompleted) {
      sendText(chatId, "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ –æ —Å–≤–æ–∏—Ö —Ü–µ–ª—è—Ö –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö!");
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    if (!userProfile.name || !userProfile.goal) {
      const prompt = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é, –Ω–æ —É –Ω–µ–≥–æ –Ω–µ–ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å. 
      –ü—Ä–æ—Ñ–∏–ª—å: ${JSON.stringify(userProfile)}
      
      –û–±—ä—è—Å–Ω–∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, —á—Ç–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∏ –ø–æ–ø—Ä–æ—Å–∏ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ (–≤–æ–∑—Ä–∞—Å—Ç, —Ü–µ–ª—å, –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –µ–¥–µ).`;
      
      const aiResponse = callGemini(prompt, { temperature: 0.7, maxTokens: 500 });
      
      if (aiResponse) {
        sendText(chatId, aiResponse);
        addToConversationHistory(chatId, 'assistant', aiResponse);
      } else {
        sendText(chatId, "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –º–Ω–µ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—Å. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–∏—Ö —Ü–µ–ª—è—Ö, –≤–æ–∑—Ä–∞—Å—Ç–µ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö –≤ –ø–∏—Ç–∞–Ω–∏–∏!");
      }
      return;
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–µ–Ω—é —á–µ—Ä–µ–∑ –ò–ò
    generateAIMenu(chatId, userProfile);
    
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é –¥–ª—è ${chatId}: ${error.message}`);
    sendText(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.");
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –º–µ–Ω—é —á–µ—Ä–µ–∑ –ò–ò
 * @param {string|number} chatId - ID —á–∞—Ç–∞  
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function generateAIMenu(chatId, userProfile) {
  try {
    sendText(chatId, "ü§ñ –°–æ–∑–¥–∞—é –¥–ª—è –≤–∞—Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ –º–∏–Ω—É—Ç—ã.");
    
    const prompt = `–¢—ã - –æ–ø—ã—Ç–Ω—ã–π –¥–∏–µ—Ç–æ–ª–æ–≥. –°–æ–∑–¥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï:
- –ò–º—è: ${userProfile.name}
- –í–æ–∑—Ä–∞—Å—Ç: ${userProfile.age || '–Ω–µ —É–∫–∞–∑–∞–Ω'}
- –¶–µ–ª—å: ${userProfile.goal || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
- –¢–∏–ø –ø–∏—Ç–∞–Ω–∏—è: ${userProfile.dietType || '–æ–±—ã—á–Ω–æ–µ'}
- –ê–ª–ª–µ—Ä–≥–∏–∏: ${userProfile.allergies ? userProfile.allergies.join(', ') : '–Ω–µ—Ç'}
- –ù–µ–ª—é–±–∏–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã: ${userProfile.dislikedProducts ? userProfile.dislikedProducts.join(', ') : '–Ω–µ—Ç'}
- –õ—é–±–∏–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã: ${userProfile.favoriteProducts ? userProfile.favoriteProducts.join(', ') : '–Ω–µ—Ç'}
- –ë—é–¥–∂–µ—Ç: ${userProfile.monthlyBudget || '–Ω–µ —É–∫–∞–∑–∞–Ω'}
- –í—Ä–µ–º—è –Ω–∞ –≥–æ—Ç–æ–≤–∫—É: ${userProfile.cookingTime || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}

–ó–ê–î–ê–ß–ê:
–°–æ–∑–¥–∞–π —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å (–∑–∞–≤—Ç—Ä–∞–∫, –æ–±–µ–¥, —É–∂–∏–Ω) —Å —É—á–µ—Ç–æ–º:
1. –¶–µ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
2. –ï–≥–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
3. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
4. –ü—Ä–æ—Å—Ç–æ—Ç—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
üçΩÔ∏è **–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –¥–ª—è ${userProfile.name}**

**–ó–ê–í–¢–†–ê–ö** üåÖ
- –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞
- –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
- –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –ö–ë–ñ–£

**–û–ë–ï–î** üåû  
- –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞
- –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
- –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –ö–ë–ñ–£

**–£–ñ–ò–ù** üåô
- –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞
- –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
- –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –ö–ë–ñ–£

**–ò—Ç–æ–≥–æ –∑–∞ –¥–µ–Ω—å:** –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –æ–±—â–µ–µ –ö–ë–ñ–£

üí° **–°–æ–≤–µ—Ç –¥–Ω—è:** –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è

–ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ —É–º–µ—Ä–µ–Ω–Ω–æ –∏ –¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç —á–∏—Ç–∞–µ–º—ã–º.`;

    const aiResponse = callGemini(prompt, { temperature: 0.8, maxTokens: 1500 });
    
    if (aiResponse) {
      sendText(chatId, aiResponse);
      addToConversationHistory(chatId, 'assistant', aiResponse);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–µ–Ω—é –≤ –ø—Ä–æ—Ñ–∏–ª–µ
      updateUserProfileField(chatId, 'lastGeneratedMenu', {
        date: new Date().toISOString(),
        menu: aiResponse
      });
      
      // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
      const keyboard = {
        inline_keyboard: [
          [
            { text: "üõí –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫", callback_data: "shopping_list" },
            { text: "üë®‚Äçüç≥ –†–µ—Ü–µ–ø—Ç—ã", callback_data: "get_recipes" }
          ],
          [
            { text: "üîÑ –î—Ä—É–≥–æ–µ –º–µ–Ω—é", callback_data: "regenerate_menu" },
            { text: "üìù –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –º–µ–Ω—é", callback_data: "customize_menu" }
          ]
        ]
      };
      
      sendText(chatId, "–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?", keyboard);
      
    } else {
      sendText(chatId, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.");
    }
    
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ò–ò-–º–µ–Ω—é –¥–ª—è ${chatId}: ${error.message}`);
    sendText(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É "—Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫"
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleShoppingList(chatId, userProfile) {
  const message = "üõí –§—É–Ω–∫—Ü–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é. –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è —Å–æ–∑–¥–∞—Ç—å –º–µ–Ω—é!";
  sendText(chatId, message);
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleSettings(chatId, userProfile) {
  const settingsText = `‚öôÔ∏è **–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:**

üë§ –ò–º—è: ${userProfile.name || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}
üéØ –¶–µ–ª—å: ${userProfile.goal || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
üìÖ –í–æ–∑—Ä–∞—Å—Ç: ${userProfile.age || '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üçΩÔ∏è –¢–∏–ø –ø–∏—Ç–∞–Ω–∏—è: ${userProfile.dietType || '–æ–±—ã—á–Ω–æ–µ'}
üö´ –ê–ª–ª–µ—Ä–≥–∏–∏: ${userProfile.allergies ? userProfile.allergies.join(', ') : '–Ω–µ—Ç'}
üí∞ –ë—é–¥–∂–µ—Ç: ${userProfile.monthlyBudget || '–Ω–µ —É–∫–∞–∑–∞–Ω'}

–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?`;

  const keyboard = {
    inline_keyboard: [
      [
        { text: "üë§ –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data: "edit_name" },
        { text: "üéØ –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª—å", callback_data: "edit_goal" }
      ],
      [
        { text: "üçΩÔ∏è –¢–∏–ø –ø–∏—Ç–∞–Ω–∏—è", callback_data: "edit_diet" },
        { text: "üö´ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è", callback_data: "edit_restrictions" }
      ],
      [
        { text: "üí∞ –ë—é–¥–∂–µ—Ç", callback_data: "edit_budget" },
        { text: "üîÑ –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data: "reset_profile" }
      ]
    ]
  };
  
  sendText(chatId, settingsText, keyboard);
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –∑–∞–º–µ–Ω—ã –ø—Ä–æ–¥—É–∫—Ç–∞
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {string} messageText - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleProductReplacement(chatId, messageText, userProfile) {
  const message = "üîÑ –ù–∞–ø–∏—à–∏—Ç–µ: '–∑–∞–º–µ–Ω–∞ [–ø—Ä–æ–¥—É–∫—Ç]', –Ω–∞–ø—Ä–∏–º–µ—Ä '–∑–∞–º–µ–Ω–∞ —Ç–≤–æ—Ä–æ–≥', –∏ —è –ø—Ä–µ–¥–ª–æ–∂—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã!";
  sendText(chatId, message);
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É "—á—Ç–æ –≥–æ—Ç–æ–≤–∏–º"
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleCooking(chatId, userProfile) {
  const message = "üë®‚Äçüç≥ –†–µ—Ü–µ–ø—Ç—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é. –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é!";
  sendText(chatId, message);
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –ø–æ–º–æ—â–∏
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleHelp(chatId, userProfile) {
  const helpText = `ü§ñ **SmartPit - –≤–∞—à –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–∏—Ç–∞–Ω–∏—é!**

**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
üçΩÔ∏è "–ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é" - —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é
üõí "—Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫" - –ø–ª–∞–Ω –ø–æ–∫—É–ø–æ–∫
‚öôÔ∏è "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏" - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º  
üîÑ "–∑–∞–º–µ–Ω–∞ [–ø—Ä–æ–¥—É–∫—Ç]" - –Ω–∞–π—Ç–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã
üë®‚Äçüç≥ "—á—Ç–æ –≥–æ—Ç–æ–≤–∏–º" - —Ä–µ—Ü–µ–ø—Ç—ã –±–ª—é–¥

**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è
‚Ä¢ –£—á–µ—Ç –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
‚Ä¢ –£–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º
‚Ä¢ –ü–æ–º–æ—â—å —Å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø–æ–∫—É–ø–æ–∫
‚Ä¢ –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø–∏—Ç–∞–Ω–∏–∏

**–ü—Ä–æ—Å—Ç–æ –æ–±—â–∞–π—Ç–µ—Å—å —Å–æ –º–Ω–æ–π!** üí¨
–ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –æ –ø–∏—Ç–∞–Ω–∏–∏, –ø—Ä–æ—Å–∏—Ç–µ —Å–æ–≤–µ—Ç—ã –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã—à–µ.`;

  sendText(chatId, helpText);
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 */
function sendMainMenu(chatId) {
  const mainMenu = getMainMenu(chatId);
  const text = "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?";
  sendText(chatId, text, mainMenu);
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {Object} fromUser - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ Telegram
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function startAiOnboarding(chatId, fromUser, userProfile) {
  try {
    // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    onboardUser(chatId, fromUser);
    
    // –ï—Å–ª–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ —É–∂–µ –ø—Ä–æ–π–¥–µ–Ω, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –∫–∞–∫ —Å—Ç–∞—Ä–æ–≥–æ –∑–Ω–∞–∫–æ–º–æ–≥–æ
    if (userProfile.onboardingCompleted && userProfile.name) {
      const welcomeBackMessage = `–ü—Ä–∏–≤–µ—Ç, ${userProfile.name}! üòä\n\n–†–∞–¥ —Ç–µ–±—è —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å! –Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–∏—Ç–∞–Ω–∏—é.\n\n–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è? –ú–æ–≥—É:\n‚Ä¢ –°–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è\n‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã\n‚Ä¢ –ü–æ–º–æ—á—å —Å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø–æ–∫—É–ø–æ–∫\n‚Ä¢ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø–∏—Ç–∞–Ω–∏–∏\n\n–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–æ–±—â–∞–µ–º—Å—è! üí¨`;
      
      sendText(chatId, welcomeBackMessage);
      addToConversationHistory(chatId, 'assistant', welcomeBackMessage);
      return;
    }
    
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userName = fromUser.first_name || fromUser.username || '–¥—Ä—É–≥';
    const onboardingMessage = `–ü—Ä–∏–≤–µ—Ç, ${userName}! üëã\n\n–Ø - —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ –∑–¥–æ—Ä–æ–≤–æ–º—É –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏! ü§ñüçé\n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç SmartPit, –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ:\n‚Ä¢ –°–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è\n‚Ä¢ –ü–æ–¥–±–∏—Ä–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã –ø–æ —Ç–≤–æ–∏–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º\n‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫–∏ –∏ –±—é–¥–∂–µ—Ç\n‚Ä¢ –°–ª–µ–¥–∏—Ç—å –∑–∞ —Ç–≤–æ–∏–º–∏ —Ü–µ–ª—è–º–∏ –≤ –ø–∏—Ç–∞–Ω–∏–∏\n\n–î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? –ò —Ä–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ - —á—Ç–æ —Ç–µ–±—è –ø—Ä–∏–≤–µ–ª–æ –∫–æ –º–Ω–µ? üòä`;
    
    sendText(chatId, onboardingMessage);
    addToConversationHistory(chatId, 'assistant', onboardingMessage);
    
    // –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
    updateUserProfileField(chatId, 'onboardingStep', 'name_and_intro');
    
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}: ${error.message}`);
    sendText(chatId, "–ü—Ä–∏–≤–µ—Ç! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–±–æ–ª—å—à–∞—è –æ—à–∏–±–∫–∞, –Ω–æ —è –≥–æ—Ç–æ–≤ —Å —Ç–æ–±–æ–π –æ–±—â–∞—Ç—å—Å—è. –†–∞—Å—Å–∫–∞–∂–∏, —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?");
  }
}

/**
 * –ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {string} messageText - –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function continueOnboarding(chatId, messageText, userProfile) {
  try {
    const history = getConversationHistory(chatId, 10);
    const currentStep = userProfile.onboardingStep || 'name_and_intro';
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ò–ò –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏ —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞
    const prompt = createOnboardingPrompt(currentStep, messageText, history, userProfile);
    
    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò
    const aiResponse = callGemini(prompt, { temperature: 0.8, maxTokens: 1500 });
    
    if (!aiResponse) {
      sendText(chatId, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –ò–ò. –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ - —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–∏—Ö —Ü–µ–ª—è—Ö –≤ –ø–∏—Ç–∞–Ω–∏–∏.");
      return;
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    sendText(chatId, aiResponse);
    addToConversationHistory(chatId, 'assistant', aiResponse);
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ò–ò –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    analyzeAndUpdateProfile(chatId, messageText, aiResponse, userProfile);
    
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}: ${error.message}`);
    sendText(chatId, "–î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö –≤ –ø–∏—Ç–∞–Ω–∏–∏.");
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –ò–ò –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
 * @param {string} currentStep - –¢–µ–∫—É—â–∏–π —à–∞–≥ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
 * @param {string} userMessage - –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Array} history - –ò—Å—Ç–æ—Ä–∏—è –æ–±—â–µ–Ω–∏—è
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {string} –ü—Ä–æ–º–ø—Ç –¥–ª—è –ò–ò
 */
function createOnboardingPrompt(currentStep, userMessage, history, userProfile) {
  const basePrompt = `–¢—ã - –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –ø–æ –∏–º–µ–Ω–∏ SmartPit. –¢—ã –ø—Ä–æ–≤–æ–¥–∏—à—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.

–¢–í–û–Ø –¶–ï–õ–¨: –°–æ–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–π –º–∞–Ω–µ—Ä–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è.

–í–ê–ñ–ù–´–ï –ü–†–ò–ù–¶–ò–ü–´:
- –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º, –Ω–æ –Ω–µ –Ω–∞–≤—è–∑—á–∏–≤—ã–º
- –ó–∞–¥–∞–≤–∞–π –ø–æ 1-2 –≤–æ–ø—Ä–æ—Å–∞ –∑–∞ —Ä–∞–∑
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏, –Ω–æ —É–º–µ—Ä–µ–Ω–Ω–æ
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –∫—Ä–∞—Ç–∫–æ, –ø—Ä–æ—Å–∏ —É—Ç–æ—á–Ω–µ–Ω–∏—è
- –ê–¥–∞–ø—Ç–∏—Ä—É–π—Å—è –∫ —Å—Ç–∏–ª—é –æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –î–õ–Ø –°–ë–û–†–ê:
1. –ò–º—è –∏ –±–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
2. –í–æ–∑—Ä–∞—Å—Ç, –ø–æ–ª, —Ä–æ—Å—Ç, –≤–µ—Å
3. –¶–µ–ª–∏ (–ø–æ—Ö—É–¥–µ–Ω–∏–µ/–Ω–∞–±–æ—Ä –º–∞—Å—Å—ã/–ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ)
4. –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
5. –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –µ–¥–µ (–ª—é–±–∏–º—ã–µ/–Ω–µ–ª—é–±–∏–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã)
6. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è (–∞–ª–ª–µ—Ä–≥–∏–∏, –¥–∏–µ—Ç–∞)
7. –ë—é–¥–∂–µ—Ç –Ω–∞ –ø–∏—Ç–∞–Ω–∏–µ
8. –í—Ä–µ–º—è –Ω–∞ –≥–æ—Ç–æ–≤–∫—É

–¢–µ–∫—É—â–∏–π —à–∞–≥: ${currentStep}`;

  let contextPrompt = '';
  
  if (history.length > 0) {
    contextPrompt += '\n\n–ò–°–¢–û–†–ò–Ø –†–ê–ó–ì–û–í–û–†–ê:\n';
    history.forEach(msg => {
      contextPrompt += `${msg.role === 'user' ? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' : '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç'}: ${msg.message}\n`;
    });
  }
  
  contextPrompt += `\n\n–ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø: "${userMessage}"`;
  
  if (currentStep === 'name_and_intro') {
    contextPrompt += '\n\n–≠—Ç–æ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è. –£–∑–Ω–∞–π –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —á—Ç–æ –µ–≥–æ –ø—Ä–∏–≤–µ–ª–æ –∫ —Ç–µ–±–µ. –ó–∞–¥–∞–π 1-2 —É—Ç–æ—á–Ω—è—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–∞ –æ –µ–≥–æ —Ü–µ–ª—è—Ö.';
  }
  
  contextPrompt += '\n\n–û–¢–í–ï–¢ –î–û–õ–ñ–ï–ù –ë–´–¢–¨:\n- –î—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º\n- –ù–µ –±–æ–ª–µ–µ 3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π\n- –° 1-2 –≤–æ–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞\n- –ë–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤\n\n–ï—Å–ª–∏ —Ç—ã —Å–æ–±—Ä–∞–ª –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è, –∑–∞–∫–æ–Ω—á–∏ —Ñ—Ä–∞–∑–æ–π: "–û–ù–ë–û–†–î–ò–ù–ì_–ó–ê–í–ï–†–®–ï–ù"';
  
  return basePrompt + contextPrompt;
}

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –ò–ò –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {string} userMessage - –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} aiResponse - –û—Ç–≤–µ—Ç –ò–ò
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function analyzeAndUpdateProfile(chatId, userMessage, aiResponse, userProfile) {
  try {
    // –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    const message = userMessage.toLowerCase();
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ–≥–æ —É–ø–æ–º—è–Ω—É–ª)
    if (!userProfile.name && (message.includes('–º–µ–Ω—è –∑–æ–≤—É—Ç') || message.includes('—è ') || message.includes('–∏–º—è'))) {
      const nameMatch = userMessage.match(/(?:–º–µ–Ω—è –∑–æ–≤—É—Ç|—è|–∏–º—è|–∑–æ–≤—É—Ç –º–µ–Ω—è)\s+([–∞-—è—ë]+)/i);
      if (nameMatch) {
        updateUserProfileField(chatId, 'name', nameMatch[1]);
      }
    }
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç
    const ageMatch = message.match(/(\d{1,2})\s*(?:–ª–µ—Ç|–≥–æ–¥|–≥–æ–¥–∞)/);
    if (ageMatch) {
      updateUserProfileField(chatId, 'age', parseInt(ageMatch[1]));
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª—å
    if (message.includes('–ø–æ—Ö—É–¥') || message.includes('—Å–±—Ä–æ—Å–∏—Ç—å') || message.includes('—Å–Ω–∏–∑–∏—Ç—å –≤–µ—Å')) {
      updateUserProfileField(chatId, 'goal', '–ø–æ—Ö—É–¥–µ–Ω–∏–µ');
    } else if (message.includes('–Ω–∞–±—Ä–∞—Ç—å') || message.includes('–ø–æ–ø—Ä–∞–≤') || message.includes('–º–∞—Å—Å—É')) {
      updateUserProfileField(chatId, 'goal', '–Ω–∞–±–æ—Ä –º–∞—Å—Å—ã');
    } else if (message.includes('–ø–æ–¥–¥–µ—Ä–∂') || message.includes('—Å–æ—Ö—Ä–∞–Ω')) {
      updateUserProfileField(chatId, 'goal', '–ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
    if (aiResponse.includes('–û–ù–ë–û–†–î–ò–ù–ì_–ó–ê–í–ï–†–®–ï–ù')) {
      updateUserProfileField(chatId, 'onboardingCompleted', true);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
      const finalMessage = `–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é –æ —Ç–µ–±–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å —Ç–≤–æ–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –ø–æ –ø–∏—Ç–∞–Ω–∏—é! üéâ\n\n–Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ:\n‚Ä¢ –°–æ—Å—Ç–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é\n‚Ä¢ –ü–æ–¥–æ–±—Ä–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã\n‚Ä¢ –°–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫–∏\n‚Ä¢ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø–∏—Ç–∞–Ω–∏–∏\n\n–ß—Ç–æ —Ö–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–º? üòä`;
      
      sendText(chatId, finalMessage);
      addToConversationHistory(chatId, 'assistant', finalMessage);
    }
    
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}: ${error.message}`);
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ò–ò –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {string} messageText - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function processMessageWithAI(chatId, messageText, userProfile) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª–µ –ø—Ä–æ—Ñ–∏–ª—è
    if (userProfile.editingField) {
      handleFieldEdit(chatId, messageText, userProfile.editingField);
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –º–µ–Ω—é
    if (userProfile.waitingForCustomization) {
      handleMenuCustomization(chatId, messageText, userProfile);
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã –∑–∞–º–µ–Ω—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    if (messageText.toLowerCase().includes('–∑–∞–º–µ–Ω–∞ ')) {
      handleProductReplacementText(chatId, messageText, userProfile);
      return;
    }
    
    const history = getConversationHistory(chatId, 5);
    
    const prompt = `–¢—ã - –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–∏—Ç–∞–Ω–∏—é SmartPit –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userProfile.name || '–¥—Ä—É–≥'}.

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï:
- –ò–º—è: ${userProfile.name || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}
- –í–æ–∑—Ä–∞—Å—Ç: ${userProfile.age || '–Ω–µ —É–∫–∞–∑–∞–Ω'}
- –¶–µ–ª—å: ${userProfile.goal || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
- –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è: ${userProfile.dietType || '–æ–±—ã—á–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ'}
- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: ${userProfile.allergies ? userProfile.allergies.join(', ') : '–Ω–µ—Ç'}

–¢–í–û–ò –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:
- –°–æ–≤–µ—Ç—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é
- –†–µ—Ü–µ–ø—Ç—ã –∏ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è
- –ü–æ–º–æ—â—å —Å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø–æ–∫—É–ø–æ–∫
- –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –∑–¥–æ—Ä–æ–≤–æ–º –ø–∏—Ç–∞–Ω–∏–∏
- –ú–æ—Ç–∏–≤–∞—Ü–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞

–ò–°–¢–û–†–ò–Ø –†–ê–ó–ì–û–í–û–†–ê:
${history.map(msg => `${msg.role === 'user' ? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' : '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç'}: ${msg.message}`).join('\n')}

–ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï: "${messageText}"

–û—Ç–≤–µ—á–∞–π –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ –∏ –ø–æ–º–æ–≥–∞–π –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Ü–µ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ —É–º–µ—Ä–µ–Ω–Ω–æ. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - —Å–ø—Ä–∞—à–∏–≤–∞–π.`;

    const aiResponse = callGemini(prompt, { temperature: 0.7, maxTokens: 1000 });
    
    if (aiResponse) {
      sendText(chatId, aiResponse);
      addToConversationHistory(chatId, 'assistant', aiResponse);
    } else {
      sendText(chatId, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –º–µ–Ω—è –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.");
    }
    
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ò–ò –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}: ${error.message}`);
    sendText(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –≤–æ–ø—Ä–æ—Å.");
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—è –ø—Ä–æ—Ñ–∏–ª—è
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {string} messageText - –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 * @param {string} fieldName - –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è
 */
function handleFieldEdit(chatId, messageText, fieldName) {
  try {
    let success = false;
    let message = '';
    
    switch (fieldName) {
      case 'name':
        success = updateUserProfileField(chatId, 'name', messageText);
        message = success ? `‚úÖ –ò–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${messageText}` : '‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏';
        break;
        
      case 'restrictions':
        const restrictions = messageText.split(',').map(item => item.trim()).filter(item => item);
        success = updateUserProfileField(chatId, 'allergies', restrictions);
        message = success ? `‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã: ${restrictions.join(', ')}` : '‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π';
        break;
        
      case 'budget':
        const budget = parseInt(messageText.replace(/\D/g, ''));
        if (budget > 0) {
          success = updateUserProfileField(chatId, 'monthlyBudget', budget);
          message = success ? `‚úÖ –ë—é–¥–∂–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω: ${budget} —Ä—É–±–ª–µ–π` : '‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–∞';
        } else {
          message = '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö';
        }
        break;
        
      default:
        message = '‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è';
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    updateUserProfileField(chatId, 'editingField', null);
    
    sendText(chatId, message);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if (success) {
      setTimeout(() => {
        const updatedProfile = getUserProfile(chatId);
        handleSettings(chatId, updatedProfile);
      }, 1000);
    }
    
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—è ${fieldName} –¥–ª—è ${chatId}: ${error.message}`);
    sendText(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—é –º–µ–Ω—é
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {string} messageText - –ü–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—é –º–µ–Ω—é
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleMenuCustomization(chatId, messageText, userProfile) {
  try {
    sendText(chatId, "ü§ñ –°–æ–∑–¥–∞—é –∫–∞—Å—Ç–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é —Å —É—á–µ—Ç–æ–º –≤–∞—à–∏—Ö –ø–æ–∂–µ–ª–∞–Ω–∏–π...");
    
    const prompt = `–¢—ã - –æ–ø—ã—Ç–Ω—ã–π –¥–∏–µ—Ç–æ–ª–æ–≥. –ò–∑–º–µ–Ω–∏ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —É—á–µ—Ç–æ–º –µ–≥–æ –Ω–æ–≤—ã—Ö –ø–æ–∂–µ–ª–∞–Ω–∏–π.

–ü–†–û–§–ò–õ–¨ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:
- –ò–º—è: ${userProfile.name}
- –¶–µ–ª—å: ${userProfile.goal}
- –¢–∏–ø –ø–∏—Ç–∞–Ω–∏—è: ${userProfile.dietType || '–æ–±—ã—á–Ω–æ–µ'}
- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: ${userProfile.allergies ? userProfile.allergies.join(', ') : '–Ω–µ—Ç'}

–ü–û–°–õ–ï–î–ù–ï–ï –ú–ï–ù–Æ:
${userProfile.lastGeneratedMenu ? userProfile.lastGeneratedMenu.menu : '–ú–µ–Ω—é –Ω–µ —Å–æ–∑–¥–∞–Ω–æ'}

–ü–û–ñ–ï–õ–ê–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:
"${messageText}"

–°–æ–∑–¥–∞–π –Ω–æ–≤–æ–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –º–µ–Ω—é, —É—á–∏—Ç—ã–≤–∞—è –≤—Å–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –û–±—ä—è—Å–Ω–∏, –∫–∞–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç—ã —Å–¥–µ–ª–∞–ª.

–§–û–†–ú–ê–¢:
üçΩÔ∏è **–ö–∞—Å—Ç–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é –¥–ª—è ${userProfile.name}**

[–ú–µ–Ω—é –≤ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ, —á—Ç–æ –∏ —Ä–∞–Ω—å—à–µ]

üìù **–ò–∑–º–µ–Ω–µ–Ω–∏—è:**
- –ß—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –º–µ–Ω—é
- –ö–∞–∫ —É—á—Ç–µ–Ω—ã –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`;

    const aiResponse = callGemini(prompt, { temperature: 0.8, maxTokens: 2000 });
    
    if (aiResponse) {
      sendText(chatId, aiResponse);
      addToConversationHistory(chatId, 'assistant', aiResponse);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é
      updateUserProfileField(chatId, 'lastGeneratedMenu', {
        date: new Date().toISOString(),
        menu: aiResponse,
        customized: true
      });
      
      // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
      const keyboard = {
        inline_keyboard: [
          [
            { text: "üõí –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫", callback_data: "shopping_list" },
            { text: "üë®‚Äçüç≥ –†–µ—Ü–µ–ø—Ç—ã", callback_data: "get_recipes" }
          ],
          [
            { text: "üîÑ –ï—â–µ –∏–∑–º–µ–Ω–∏—Ç—å", callback_data: "customize_menu" },
            { text: "‚úÖ –û—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–∫", callback_data: "menu_accepted" }
          ]
        ]
      };
      
      sendText(chatId, "–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?", keyboard);
      
    } else {
      sendText(chatId, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Å—Ç–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è.");
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏
    updateUserProfileField(chatId, 'waitingForCustomization', false);
    
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ –º–µ–Ω—é –¥–ª—è ${chatId}: ${error.message}`);
    sendText(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Å—Ç–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–µ–Ω—é.");
    updateUserProfileField(chatId, 'waitingForCustomization', false);
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞–º–µ–Ω—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {string} messageText - –¢–µ–∫—Å—Ç —Å –∫–æ–º–∞–Ω–¥–æ–π –∑–∞–º–µ–Ω—ã
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleProductReplacementText(chatId, messageText, userProfile) {
  try {
    const product = messageText.toLowerCase().replace('–∑–∞–º–µ–Ω–∞ ', '').trim();
    
    if (!product) {
      sendText(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è –∑–∞–º–µ–Ω—ã. –ù–∞–ø—Ä–∏–º–µ—Ä: '–∑–∞–º–µ–Ω–∞ —Ç–≤–æ—Ä–æ–≥'");
      return;
    }
    
    const prompt = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç "${product}".

–ü–†–û–§–ò–õ–¨ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:
- –¶–µ–ª—å: ${userProfile.goal || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
- –¢–∏–ø –ø–∏—Ç–∞–Ω–∏—è: ${userProfile.dietType || '–æ–±—ã—á–Ω–æ–µ'}
- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: ${userProfile.allergies ? userProfile.allergies.join(', ') : '–Ω–µ—Ç'}

–ü—Ä–µ–¥–ª–æ–∂–∏ 3-5 —Ö–æ—Ä–æ—à–∏—Ö –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤ —ç—Ç–æ–º—É –ø—Ä–æ–¥—É–∫—Ç—É —Å —É—á–µ—Ç–æ–º:
1. –ü–æ—Ö–æ–∂–µ–π –ø–∏—â–µ–≤–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏
2. –¶–µ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
3. –ï–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
4. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–∞—Ö

–î–ª—è –∫–∞–∂–¥–æ–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã –∫—Ä–∞—Ç–∫–æ –æ–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É –æ–Ω–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç.

–§–û–†–ú–ê–¢:
üîÑ **–ó–∞–º–µ–Ω–∞ –¥–ª—è "${product}"**

1. **[–ü—Ä–æ–¥—É–∫—Ç]** - –ø—Ä–∏—á–∏–Ω–∞
2. **[–ü—Ä–æ–¥—É–∫—Ç]** - –ø—Ä–∏—á–∏–Ω–∞
3. **[–ü—Ä–æ–¥—É–∫—Ç]** - –ø—Ä–∏—á–∏–Ω–∞

üí° **–°–æ–≤–µ—Ç:** –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è`;

    const aiResponse = callGemini(prompt, { temperature: 0.7, maxTokens: 800 });
    
    if (aiResponse) {
      sendText(chatId, aiResponse);
      addToConversationHistory(chatId, 'assistant', aiResponse);
    } else {
      sendText(chatId, `–î–ª—è –∑–∞–º–µ–Ω—ã ${product} –ø–æ–ø—Ä–æ–±—É–π—Ç–µ: –ø–æ—Ö–æ–∂–∏–µ –ø–æ —Å–æ—Å—Ç–∞–≤—É –ø—Ä–æ–¥—É–∫—Ç—ã, —É—á–∏—Ç—ã–≤–∞—é—â–∏–µ –≤–∞—à–∏ —Ü–µ–ª–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è.`);
    }
    
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –∑–∞–º–µ–Ω—ã –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è ${chatId}: ${error.message}`);
    sendText(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–º–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ—Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {Object} message - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
function handleNonTextMessage(chatId, message) {
  try {
    let responseText = '';
    
    if (message.photo) {
      responseText = "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–æ—Ç–æ! üì∑ –í –±—É–¥—É—â–µ–º —è —Å–º–æ–≥—É –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–ª—é–¥ –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤. –ê –ø–æ–∫–∞ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?";
    } else if (message.voice) {
      responseText = "–Ø –ø–æ–ª—É—á–∏–ª –≤–∞—à–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! üé§ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–∫–∞ —è –Ω–µ —É–º–µ—é –∏—Ö –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –Ω–æ —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—å. –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.";
    } else if (message.document) {
      responseText = "–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç! üìÑ –ü–æ–∫–∞ —è –Ω–µ —É–º–µ—é –∏—Ö –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å, –Ω–æ –≤ –±—É–¥—É—â–µ–º —Å–º–æ–≥—É –ø–æ–º–æ—á—å —Å –∞–Ω–∞–ª–∏–∑–æ–º –ø–ª–∞–Ω–æ–≤ –ø–∏—Ç–∞–Ω–∏—è –∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤.";
    } else if (message.sticker) {
      responseText = `–ö–ª–∞—Å—Å–Ω—ã–π —Å—Ç–∏–∫–µ—Ä! ${message.sticker.emoji || 'üòÑ'} –î–∞–≤–∞–π—Ç–µ –ª—É—á—à–µ –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ –≤–∞—à–∏—Ö —Ü–µ–ª—è—Ö –≤ –ø–∏—Ç–∞–Ω–∏–∏!`;
    } else if (message.location) {
      responseText = "–°–ø–∞—Å–∏–±–æ –∑–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é! üìç –í –±—É–¥—É—â–µ–º —è —Å–º–æ–≥—É –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –±–ª—é–¥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–µ—Å—Ç–Ω–æ–π –∫—É—Ö–Ω–∏ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤. –ê –ø–æ–∫–∞ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö!";
    } else {
      responseText = "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ! ü§î –Ø –ø–æ–∫–∞ —É—á—É—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π. –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º, —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?";
    }
    
    sendText(chatId, responseText);
    addToConversationHistory(chatId, 'assistant', responseText);
    
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è ${chatId}: ${error.message}`);
    sendText(chatId, "–ü–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º, –∫–∞–∫ –º–æ–≥—É –ø–æ–º–æ—á—å?");
  }
}

/**
 * –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ callback query –¥–ª—è –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
 * @param {Object} callbackQuery - –û–±—ä–µ–∫—Ç callback query
 */
function handleCallbackQuery(callbackQuery) {
  try {
    const data = callbackQuery.data;
    const chatId = callbackQuery.from.id;
    const userProfile = getUserProfile(chatId);
    
    // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query —Å—Ä–∞–∑—É
    answerCallbackQuery(callbackQuery.id);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback'—ã –º–µ–Ω—é
    switch (data) {
      case 'menu_nutrition':
      case 'show_menu':
        handleShowMenu(chatId, userProfile);
        break;
        
      case 'shopping_list':
        handleShoppingListCallback(chatId, userProfile);
        break;
        
      case 'get_recipes':
        handleGetRecipes(chatId, userProfile);
        break;
        
      case 'regenerate_menu':
        handleRegenerateMenu(chatId, userProfile);
        break;
        
      case 'customize_menu':
        handleCustomizeMenu(chatId, userProfile);
        break;
        
      case 'settings':
        handleSettings(chatId, userProfile);
        break;
        
      case 'edit_name':
        handleEditName(chatId);
        break;
        
      case 'edit_goal':
        handleEditGoal(chatId);
        break;
        
      case 'edit_diet':
        handleEditDiet(chatId);
        break;
        
      case 'edit_restrictions':
        handleEditRestrictions(chatId);
        break;
        
      case 'edit_budget':
        handleEditBudget(chatId);
        break;
        
      case 'reset_profile':
        handleResetProfile(chatId);
        break;
        
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏
      case 'goal_weight_loss':
        updateUserProfileField(chatId, 'goal', '–ø–æ—Ö—É–¥–µ–Ω–∏–µ');
        sendText(chatId, "‚úÖ –¶–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞: –ü–æ—Ö—É–¥–µ–Ω–∏–µ");
        handleSettings(chatId, userProfile);
        break;
        
      case 'goal_gain_weight':
        updateUserProfileField(chatId, 'goal', '–Ω–∞–±–æ—Ä –º–∞—Å—Å—ã');
        sendText(chatId, "‚úÖ –¶–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞: –ù–∞–±–æ—Ä –º–∞—Å—Å—ã");
        handleSettings(chatId, userProfile);
        break;
        
      case 'goal_maintain':
        updateUserProfileField(chatId, 'goal', '–ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞');
        sendText(chatId, "‚úÖ –¶–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞: –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞");
        handleSettings(chatId, userProfile);
        break;
        
      case 'goal_fitness':
        updateUserProfileField(chatId, 'goal', '—É–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã');
        sendText(chatId, "‚úÖ –¶–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞: –£–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã");
        handleSettings(chatId, userProfile);
        break;
        
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–∏—Ç–∞–Ω–∏—è
      case 'diet_regular':
        updateUserProfileField(chatId, 'dietType', '–æ–±—ã—á–Ω–æ–µ');
        sendText(chatId, "‚úÖ –¢–∏–ø –ø–∏—Ç–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω: –û–±—ã—á–Ω–æ–µ");
        handleSettings(chatId, userProfile);
        break;
        
      case 'diet_vegetarian':
        updateUserProfileField(chatId, 'dietType', '–≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–æ–µ');
        sendText(chatId, "‚úÖ –¢–∏–ø –ø–∏—Ç–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω: –í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–æ–µ");
        handleSettings(chatId, userProfile);
        break;
        
      case 'diet_vegan':
        updateUserProfileField(chatId, 'dietType', '–≤–µ–≥–∞–Ω—Å–∫–æ–µ');
        sendText(chatId, "‚úÖ –¢–∏–ø –ø–∏—Ç–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω: –í–µ–≥–∞–Ω—Å–∫–æ–µ");
        handleSettings(chatId, userProfile);
        break;
        
      case 'diet_keto':
        updateUserProfileField(chatId, 'dietType', '–∫–µ—Ç–æ');
        sendText(chatId, "‚úÖ –¢–∏–ø –ø–∏—Ç–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω: –ö–µ—Ç–æ");
        handleSettings(chatId, userProfile);
        break;
        
      case 'diet_gluten_free':
        updateUserProfileField(chatId, 'dietType', '–±–µ–∑–≥–ª—é—Ç–µ–Ω–æ–≤–æ–µ');
        sendText(chatId, "‚úÖ –¢–∏–ø –ø–∏—Ç–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω: –ë–µ–∑–≥–ª—é—Ç–µ–Ω–æ–≤–æ–µ");
        handleSettings(chatId, userProfile);
        break;
        
      case 'diet_lactose_free':
        updateUserProfileField(chatId, 'dietType', '–±–µ–∑–ª–∞–∫—Ç–æ–∑–Ω–æ–µ');
        sendText(chatId, "‚úÖ –¢–∏–ø –ø–∏—Ç–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω: –ë–µ–∑–ª–∞–∫—Ç–æ–∑–Ω–æ–µ");
        handleSettings(chatId, userProfile);
        break;
        
      // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞ –ø—Ä–æ—Ñ–∏–ª—è
      case 'confirm_reset':
        resetUserProfile(chatId);
        sendText(chatId, "üîÑ –ü—Ä–æ—Ñ–∏–ª—å —Å–±—Ä–æ—à–µ–Ω! –î–∞–≤–∞–π—Ç–µ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ.");
        startAiOnboarding(chatId, {first_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}, createEmptyProfile());
        break;
        
      case 'cancel_reset':
        sendText(chatId, "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ. –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.");
        handleSettings(chatId, userProfile);
        break;
        
      default:
        // –ï—Å–ª–∏ callback –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—É—é –ª–æ–≥–∏–∫—É
        if (typeof handleCallbackQueryOriginal === 'function') {
          handleCallbackQueryOriginal(callbackQuery);
        } else {
          sendText(chatId, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
        }
    }
    
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback query: ${error.message}`);
    sendText(callbackQuery.from.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback "—Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫"
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleShoppingListCallback(chatId, userProfile) {
  if (!userProfile.lastGeneratedMenu) {
    sendText(chatId, "–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –º–µ–Ω—é, –∏ —è —Å–æ—Å—Ç–∞–≤–ª—é —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫!");
    return;
  }
  
  const prompt = `–ù–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–æ–≥–æ –º–µ–Ω—é —Å–æ—Å—Ç–∞–≤—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫:

${userProfile.lastGeneratedMenu.menu}

–°–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:
ü•¨ –û–≤–æ—â–∏ –∏ –∑–µ–ª–µ–Ω—å
ü•© –ú—è—Å–æ –∏ —Ä—ã–±–∞  
ü•õ –ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
üçû –•–ª–µ–± –∏ –∫—Ä—É–ø—ã
üßÑ –ü—Ä–∏–ø—Ä–∞–≤—ã –∏ —Å–æ—É—Å—ã

–£–∫–∞–∑—ã–≤–∞–π –ø—Ä–∏–º–µ—Ä–Ω—ã–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–ª—è –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞.`;

  const aiResponse = callGemini(prompt, { temperature: 0.5, maxTokens: 1000 });
  
  if (aiResponse) {
    sendText(chatId, `üõí **–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫**\n\n${aiResponse}`);
    addToConversationHistory(chatId, 'assistant', aiResponse);
  } else {
    sendText(chatId, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback "—Ä–µ—Ü–µ–ø—Ç—ã"
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleGetRecipes(chatId, userProfile) {
  if (!userProfile.lastGeneratedMenu) {
    sendText(chatId, "–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –º–µ–Ω—é, –∏ —è –¥–∞–º —Ä–µ—Ü–µ–ø—Ç—ã!");
    return;
  }
  
  sendText(chatId, "üë®‚Äçüç≥ –ì–æ—Ç–æ–≤–ª—é –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã...");
  
  const prompt = `–î–ª—è —ç—Ç–æ–≥–æ –º–µ–Ω—é –¥–∞–π –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:

${userProfile.lastGeneratedMenu.menu}

–î–ª—è –∫–∞–∂–¥–æ–≥–æ –±–ª—é–¥–∞ —É–∫–∞–∂–∏:
- –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞–º–∏
- –ü–æ—à–∞–≥–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç
- –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è
- –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã

–î–µ–ª–∞–π —Ä–µ—Ü–µ–ø—Ç—ã –ø—Ä–æ—Å—Ç—ã–º–∏ –∏ –ø–æ–Ω—è—Ç–Ω—ã–º–∏.`;

  const aiResponse = callGemini(prompt, { temperature: 0.6, maxTokens: 2000 });
  
  if (aiResponse) {
    sendText(chatId, `üë®‚Äçüç≥ **–†–µ—Ü–µ–ø—Ç—ã**\n\n${aiResponse}`);
    addToConversationHistory(chatId, 'assistant', aiResponse);
  } else {
    sendText(chatId, "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback "–¥—Ä—É–≥–æ–µ –º–µ–Ω—é"
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleRegenerateMenu(chatId, userProfile) {
  sendText(chatId, "üîÑ –°–æ–∑–¥–∞—é –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –º–µ–Ω—é...");
  generateAIMenu(chatId, userProfile);
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback "–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –º–µ–Ω—é"
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 * @param {Object} userProfile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleCustomizeMenu(chatId, userProfile) {
  const message = "üìù –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –º–µ–Ω—é?\n\n–ù–∞–ø—Ä–∏–º–µ—Ä:\n‚Ä¢ –£–±—Ä–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã\n‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –±–µ–ª–∫–∞\n‚Ä¢ –°–¥–µ–ª–∞—Ç—å –≤–µ–≥–∞–Ω—Å–∫–æ–µ –º–µ–Ω—é\n‚Ä¢ –£—á–µ—Å—Ç—å –±—é–¥–∂–µ—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è";
  sendText(chatId, message);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏
  updateUserProfileField(chatId, 'waitingForCustomization', true);
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 */
function handleEditName(chatId) {
  sendText(chatId, "üë§ –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç? –ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:");
  updateUserProfileField(chatId, 'editingField', 'name');
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–ª–∏
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 */
function handleEditGoal(chatId) {
  const keyboard = {
    inline_keyboard: [
      [
        { text: "üî• –ü–æ—Ö—É–¥–µ–Ω–∏–µ", callback_data: "goal_weight_loss" },
        { text: "üí™ –ù–∞–±–æ—Ä –º–∞—Å—Å—ã", callback_data: "goal_gain_weight" }
      ],
      [
        { text: "‚öñÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞", callback_data: "goal_maintain" },
        { text: "üèÉ –£–ª—É—á—à–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã", callback_data: "goal_fitness" }
      ]
    ]
  };
  
  sendText(chatId, "üéØ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ü–µ–ª—å:", keyboard);
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –ø–∏—Ç–∞–Ω–∏—è
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 */
function handleEditDiet(chatId) {
  const keyboard = {
    inline_keyboard: [
      [
        { text: "üçΩÔ∏è –û–±—ã—á–Ω–æ–µ", callback_data: "diet_regular" },
        { text: "ü•¨ –í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–æ–µ", callback_data: "diet_vegetarian" }
      ],
      [
        { text: "üå± –í–µ–≥–∞–Ω—Å–∫–æ–µ", callback_data: "diet_vegan" },
        { text: "ü•© –ö–µ—Ç–æ", callback_data: "diet_keto" }
      ],
      [
        { text: "üçû –ë–µ–∑–≥–ª—é—Ç–µ–Ω–æ–≤–æ–µ", callback_data: "diet_gluten_free" },
        { text: "ü•õ –ë–µ–∑–ª–∞–∫—Ç–æ–∑–Ω–æ–µ", callback_data: "diet_lactose_free" }
      ]
    ]
  };
  
  sendText(chatId, "üçΩÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–∏—Ç–∞–Ω–∏—è:", keyboard);
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 */
function handleEditRestrictions(chatId) {
  sendText(chatId, "üö´ –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ø–∏—â–µ–≤—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –∞–ª–ª–µ—Ä–≥–∏–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: –æ—Ä–µ—Ö–∏, –º–æ–ª–æ–∫–æ, –≥–ª—é—Ç–µ–Ω");
  updateUserProfileField(chatId, 'editingField', 'restrictions');
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 */
function handleEditBudget(chatId) {
  sendText(chatId, "üí∞ –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏–º–µ—Ä–Ω—ã–π –º–µ—Å—è—á–Ω—ã–π –±—é–¥–∂–µ—Ç –Ω–∞ –ø–∏—Ç–∞–Ω–∏–µ –≤ —Ä—É–±–ª—è—Ö:\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: 15000");
  updateUserProfileField(chatId, 'editingField', 'budget');
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–±—Ä–æ—Å –ø—Ä–æ—Ñ–∏–ª—è
 * @param {string|number} chatId - ID —á–∞—Ç–∞
 */
function handleResetProfile(chatId) {
  const keyboard = {
    inline_keyboard: [
      [
        { text: "‚úÖ –î–∞, —Å–±—Ä–æ—Å–∏—Ç—å", callback_data: "confirm_reset" },
        { text: "‚ùå –û—Ç–º–µ–Ω–∞", callback_data: "cancel_reset" }
      ]
    ]
  };
  
  sendText(chatId, "‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ!**\n\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ—Ñ–∏–ª—å? –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞ –∏ –ø—Ä–∏–¥–µ—Ç—Å—è –∑–∞–Ω–æ–≤–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ.", keyboard);
}