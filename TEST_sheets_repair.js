/**
 * @file TEST_sheets_repair.js
 * @description –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–æ–≤
 */

/**
 * –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ª–∏—Å—Ç–æ–≤
 */
function diagnoseAndRepairSheetsSystem() {
  Logger.log('üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´ –õ–ò–°–¢–û–í');
  
  const repairResults = {
    timestamp: new Date(),
    steps: [],
    repaired: [],
    errors: [],
    success: false
  };

  try {
    // –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    repairResults.steps.push('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
    const configCheck = checkSheetsConfiguration();
    if (!configCheck.success) {
      repairResults.steps.push('–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...');
      const configRepair = repairSheetsConfiguration();
      repairResults.repaired.push(...configRepair.actions);
    }

    // –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É
    repairResults.steps.push('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã...');
    const infraCheck = checkProjectInfrastructure();
    if (!infraCheck.success) {
      repairResults.steps.push('–°–æ–∑–¥–∞–µ–º –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É...');
      const infraRepair = createProjectInfrastructure();
      repairResults.repaired.push(...infraRepair.actions);
    }

    // –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã –ª–∏—Å—Ç–æ–≤
    repairResults.steps.push('–ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ –ª–∏—Å—Ç–æ–≤...');
    const templateCheck = checkSheetTemplates();
    if (!templateCheck.success) {
      repairResults.steps.push('–ò—Å–ø—Ä–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω—ã...');
      const templateRepair = repairSheetTemplates();
      repairResults.repaired.push(...templateRepair.actions);
    }

    // –®–∞–≥ 4: –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ª–∏—Å—Ç–æ–≤
    repairResults.steps.push('–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ª–∏—Å—Ç–æ–≤...');
    const userSheetTest = testUserSheetCreation();
    if (!userSheetTest.success) {
      repairResults.steps.push('–ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ª–∏—Å—Ç–æ–≤...');
      const userSheetRepair = repairUserSheetSystem();
      repairResults.repaired.push(...userSheetRepair.actions);
    }

    // –®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä—É–µ–º UI –∫–Ω–æ–ø–∫–∏
    repairResults.steps.push('–¢–µ—Å—Ç–∏—Ä—É–µ–º UI –∫–Ω–æ–ø–∫–∏...');
    const uiTest = testUIButtons();
    if (!uiTest.success) {
      repairResults.steps.push('–ò—Å–ø—Ä–∞–≤–ª—è–µ–º UI —Å–∏—Å—Ç–µ–º—É...');
      const uiRepair = repairUISystem();
      repairResults.repaired.push(...uiRepair.actions);
    }

    repairResults.success = true;
    Logger.log('‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û');

  } catch (error) {
    repairResults.errors.push(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
    Logger.log(`‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${error.message}`);
  }

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
  generateRepairReport(repairResults);
  return repairResults;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã –ª–∏—Å—Ç–æ–≤
 */
function checkSheetsConfiguration() {
  const result = { success: false, issues: [], details: [] };
  
  try {
    const scriptProps = PropertiesService.getScriptProperties();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
    const requiredProps = {
      'ROOT_FOLDER_ID': 'ID –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏',
      'TEMPLATE_SHEET_ID': 'ID —à–∞–±–ª–æ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã',
      'USERS_SPREADSHEET_ID': 'ID —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
    };
    
    Object.entries(requiredProps).forEach(([prop, description]) => {
      const value = scriptProps.getProperty(prop);
      if (value) {
        result.details.push(`‚úÖ ${prop}: ${value.substring(0, 20)}...`);
      } else {
        result.issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ${prop} (${description})`);
      }
    });
    
    result.success = result.issues.length === 0;
    
  } catch (error) {
    result.issues.push(`–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${error.message}`);
  }
  
  Logger.log(`–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: ${result.success ? 'OK' : '–¢–†–ï–ë–£–ï–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø'}`);
  return result;
}

/**
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã –ª–∏—Å—Ç–æ–≤
 */
function repairSheetsConfiguration() {
  const result = { success: false, actions: [] };
  
  try {
    const scriptProps = PropertiesService.getScriptProperties();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    let rootFolderId = scriptProps.getProperty('ROOT_FOLDER_ID');
    if (!rootFolderId) {
      // –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É
      const rootFolder = DriveApp.createFolder('SmartPit_Users_' + Date.now());
      rootFolderId = rootFolder.getId();
      scriptProps.setProperty('ROOT_FOLDER_ID', rootFolderId);
      result.actions.push(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞: ${rootFolderId}`);
    }
    
    let templateId = scriptProps.getProperty('TEMPLATE_SHEET_ID');
    if (!templateId) {
      // –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
      const templateSheet = SpreadsheetApp.create('Template_SmartPit_Sheet_' + Date.now());
      templateId = templateSheet.getId();
      scriptProps.setProperty('TEMPLATE_SHEET_ID', templateId);
      
      // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É
      const rootFolder = DriveApp.getFolderById(rootFolderId);
      const templateFile = DriveApp.getFileById(templateId);
      templateFile.moveTo(rootFolder);
      
      result.actions.push(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —à–∞–±–ª–æ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞: ${templateId}`);
    }
    
    let usersSpreadsheetId = scriptProps.getProperty('USERS_SPREADSHEET_ID');
    if (!usersSpreadsheetId) {
      // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const usersSpreadsheet = SpreadsheetApp.create('SmartPit_Users_' + Date.now());
      usersSpreadsheetId = usersSpreadsheet.getId();
      scriptProps.setProperty('USERS_SPREADSHEET_ID', usersSpreadsheetId);
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const usersSheet = usersSpreadsheet.getActiveSheet();
      usersSheet.setName('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏');
      usersSheet.getRange('A1:L1').setValues([[
        'ID', 'Bot', '–ò–º—è', '–§–∞–º–∏–ª–∏—è', 'Username', '–Ø–∑—ã–∫', 'Premium', 
        '–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', '–ü–∞–ø–∫–∞', '–¢–∞–±–ª–∏—Ü–∞', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–ê–¥–º–∏–Ω'
      ]]);
      
      // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É
      const rootFolder = DriveApp.getFolderById(rootFolderId);
      const usersFile = DriveApp.getFileById(usersSpreadsheetId);
      usersFile.moveTo(rootFolder);
      
      result.actions.push(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersSpreadsheetId}`);
    }
    
    result.success = true;
    
  } catch (error) {
    result.actions.push(`‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${error.message}`);
  }
  
  return result;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
 */
function checkProjectInfrastructure() {
  const result = { success: false, issues: [], details: [] };
  
  try {
    const scriptProps = PropertiesService.getScriptProperties();
    const rootFolderId = scriptProps.getProperty('ROOT_FOLDER_ID');
    const templateId = scriptProps.getProperty('TEMPLATE_SHEET_ID');
    
    if (rootFolderId) {
      try {
        const rootFolder = DriveApp.getFolderById(rootFolderId);
        result.details.push(`‚úÖ –ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞: ${rootFolder.getName()}`);
      } catch (error) {
        result.issues.push(`‚ùå –ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: ${error.message}`);
      }
    }
    
    if (templateId) {
      try {
        const templateSheet = SpreadsheetApp.openById(templateId);
        result.details.push(`‚úÖ –®–∞–±–ª–æ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞: ${templateSheet.getName()}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏—Å—Ç—ã –≤ —à–∞–±–ª–æ–Ω–µ
        const sheets = templateSheet.getSheets();
        const sheetNames = sheets.map(s => s.getName());
        result.details.push(`üìä –õ–∏—Å—Ç–æ–≤ –≤ —à–∞–±–ª–æ–Ω–µ: ${sheets.length} (${sheetNames.join(', ')})`);
        
      } catch (error) {
        result.issues.push(`‚ùå –®–∞–±–ª–æ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: ${error.message}`);
      }
    }
    
    result.success = result.issues.length === 0;
    
  } catch (error) {
    result.issues.push(`–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã: ${error.message}`);
  }
  
  Logger.log(`–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞: ${result.success ? 'OK' : '–¢–†–ï–ë–£–ï–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø'}`);
  return result;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
 */
function createProjectInfrastructure() {
  const result = { success: false, actions: [] };
  
  try {
    // –í—ã–ø–æ–ª–Ω—è–µ–º setupProjectInfrastructure —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏
    const scriptProps = PropertiesService.getScriptProperties();
    const templateId = scriptProps.getProperty('TEMPLATE_SHEET_ID');
    
    if (templateId) {
      const templateSheet = SpreadsheetApp.openById(templateId);
      
      // –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ª–∏—Å—Ç—ã
      const requiredSheets = [
        '–ú–µ–Ω—é –ø–æ –¥–Ω—è–º', '–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫', '–ì–æ—Ç–æ–≤–∫–∞', '–ó–∞–º–µ–Ω—ã', 
        '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', '–õ–æ–≥–∏', '–ü—Ä–æ–¥—É–∫—Ç—ã', '–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏'
      ];
      
      const existingSheets = templateSheet.getSheets().map(s => s.getName());
      
      requiredSheets.forEach(sheetName => {
        if (!existingSheets.includes(sheetName)) {
          try {
            const newSheet = templateSheet.insertSheet(sheetName);
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ª–∏—Å—Ç—ã
            if (sheetName === '–ü—Ä–æ–¥—É–∫—Ç—ã') {
              newSheet.getRange('A1:F1').setValues([['–¢–∏–ø', '–ë–ª—é–¥–æ', '–ö–∞–ª–æ—Ä–∏–∏', '–ë–µ–ª–∫–∏', '–ñ–∏—Ä—ã', '–£–≥–ª–µ–≤–æ–¥—ã']]);
            } else if (sheetName === '–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏') {
              newSheet.getRange('A1:B1').setValues([['–°–æ–æ–±—â–µ–Ω–∏–µ', '–î–µ–π—Å—Ç–≤–∏–µ']]);
            } else if (sheetName === '–ù–∞—Å—Ç—Ä–æ–π–∫–∏') {
              newSheet.getRange('A1:B10').setValues([
                ['–ü–∞—Ä–∞–º–µ—Ç—Ä', '–ó–Ω–∞—á–µ–Ω–∏–µ'],
                ['–ò–º—è', ''],
                ['–í–µ—Å', ''],
                ['–†–æ—Å—Ç', ''],
                ['–í–æ–∑—Ä–∞—Å—Ç', ''],
                ['–ü–æ–ª', ''],
                ['–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', ''],
                ['–¶–µ–ª—å', ''],
                ['–í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', ''],
                ['–†–µ–∂–∏–º AI', 'false']
              ]);
            }
            
            result.actions.push(`‚úÖ –°–æ–∑–¥–∞–Ω –ª–∏—Å—Ç: ${sheetName}`);
          } catch (error) {
            result.actions.push(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–∞ ${sheetName}: ${error.message}`);
          }
        } else {
          result.actions.push(`‚ÑπÔ∏è –õ–∏—Å—Ç ${sheetName} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        }
      });
    }
    
    result.success = true;
    
  } catch (error) {
    result.actions.push(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã: ${error.message}`);
  }
  
  return result;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —à–∞–±–ª–æ–Ω—ã –ª–∏—Å—Ç–æ–≤
 */
function checkSheetTemplates() {
  const result = { success: false, issues: [], details: [] };
  
  try {
    const scriptProps = PropertiesService.getScriptProperties();
    const templateId = scriptProps.getProperty('TEMPLATE_SHEET_ID');
    
    if (!templateId) {
      result.issues.push('–®–∞–±–ª–æ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
      return result;
    }
    
    const templateSheet = SpreadsheetApp.openById(templateId);
    const sheets = templateSheet.getSheets();
    const sheetNames = sheets.map(s => s.getName());
    
    const requiredSheets = [
      '–ú–µ–Ω—é –ø–æ –¥–Ω—è–º', '–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫', '–ì–æ—Ç–æ–≤–∫–∞', '–ó–∞–º–µ–Ω—ã', 
      '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', '–õ–æ–≥–∏', '–ü—Ä–æ–¥—É–∫—Ç—ã', '–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏'
    ];
    
    requiredSheets.forEach(requiredSheet => {
      if (sheetNames.includes(requiredSheet)) {
        result.details.push(`‚úÖ –õ–∏—Å—Ç "${requiredSheet}" –Ω–∞–π–¥–µ–Ω`);
      } else {
        result.issues.push(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ª–∏—Å—Ç "${requiredSheet}"`);
      }
    });
    
    result.success = result.issues.length === 0;
    
  } catch (error) {
    result.issues.push(`–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤: ${error.message}`);
  }
  
  Logger.log(`–®–∞–±–ª–æ–Ω—ã –ª–∏—Å—Ç–æ–≤: ${result.success ? 'OK' : '–¢–†–ï–ë–£–ï–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø'}`);
  return result;
}

/**
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —à–∞–±–ª–æ–Ω—ã –ª–∏—Å—Ç–æ–≤
 */
function repairSheetTemplates() {
  const result = { success: false, actions: [] };
  
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    const infraResult = createProjectInfrastructure();
    result.actions.push(...infraResult.actions);
    result.success = infraResult.success;
    
  } catch (error) {
    result.actions.push(`‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤: ${error.message}`);
  }
  
  return result;
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ª–∏—Å—Ç–æ–≤
 */
function testUserSheetCreation() {
  const result = { success: false, issues: [], details: [] };
  
  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const testChatId = 'test_user_' + Date.now();
    const testUser = {
      id: testChatId,
      first_name: 'Test User',
      username: 'testuser'
    };
    
    result.details.push(`üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${testChatId}`);
    
    // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try {
      onboardUser(testChatId, testUser);
      result.details.push(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞
      const scriptProps = PropertiesService.getScriptProperties();
      const userFolderId = scriptProps.getProperty(String(testChatId));
      
      if (userFolderId) {
        const userFolder = DriveApp.getFolderById(userFolderId);
        result.details.push(`‚úÖ –ü–∞–ø–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–∑–¥–∞–Ω–∞: ${userFolder.getName()}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
        const files = userFolder.getFiles();
        let fileCount = 0;
        while (files.hasNext()) {
          files.next();
          fileCount++;
        }
        result.details.push(`üìÑ –§–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${fileCount}`);
        
        result.success = true;
        
        // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        try {
          scriptProps.deleteProperty(String(testChatId));
          userFolder.setTrashed(true);
          result.details.push(`üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã`);
        } catch (cleanupError) {
          result.details.push(`‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: ${cleanupError.message}`);
        }
        
      } else {
        result.issues.push('–ü–∞–ø–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞');
      }
      
    } catch (error) {
      result.issues.push(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`);
    }
    
  } catch (error) {
    result.issues.push(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`);
  }
  
  Logger.log(`–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ª–∏—Å—Ç–æ–≤: ${result.success ? 'OK' : '–¢–†–ï–ë–£–ï–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø'}`);
  return result;
}

/**
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∏—Å—Ç–µ–º—É —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ª–∏—Å—Ç–æ–≤
 */
function repairUserSheetSystem() {
  const result = { success: false, actions: [] };
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é onboardUser
    try {
      const func = eval('onboardUser');
      if (typeof func === 'function') {
        result.actions.push(`‚úÖ –§—É–Ω–∫—Ü–∏—è onboardUser –¥–æ—Å—Ç—É–ø–Ω–∞`);
      } else {
        result.actions.push(`‚ùå –§—É–Ω–∫—Ü–∏—è onboardUser –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
        return result;
      }
    } catch (error) {
      result.actions.push(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ onboardUser: ${error.message}`);
      return result;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ Drive API
    try {
      const testFolder = DriveApp.createFolder('test_' + Date.now());
      testFolder.setTrashed(true);
      result.actions.push(`‚úÖ Drive API –¥–æ—Å—Ç—É–ø–µ–Ω`);
    } catch (error) {
      result.actions.push(`‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Drive API: ${error.message}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ Sheets API
    try {
      const testSheet = SpreadsheetApp.create('test_' + Date.now());
      DriveApp.getFileById(testSheet.getId()).setTrashed(true);
      result.actions.push(`‚úÖ Sheets API –¥–æ—Å—Ç—É–ø–µ–Ω`);
    } catch (error) {
      result.actions.push(`‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Sheets API: ${error.message}`);
    }
    
    result.success = true;
    
  } catch (error) {
    result.actions.push(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${error.message}`);
  }
  
  return result;
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç UI –∫–Ω–æ–ø–∫–∏
 */
function testUIButtons() {
  const result = { success: false, issues: [], details: [] };
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ UI —Ñ—É–Ω–∫—Ü–∏–∏
    const uiFunctions = [
      'getMenu',
      'sendMenu', 
      'sendSettingsMenu',
      'showAdminPanel'
    ];
    
    let functionsAvailable = 0;
    
    uiFunctions.forEach(funcName => {
      try {
        const func = eval(funcName);
        if (typeof func === 'function') {
          result.details.push(`‚úÖ –§—É–Ω–∫—Ü–∏—è ${funcName}: –¥–æ—Å—Ç—É–ø–Ω–∞`);
          functionsAvailable++;
        } else {
          result.issues.push(`‚ùå –§—É–Ω–∫—Ü–∏—è ${funcName}: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
        }
      } catch (error) {
        result.issues.push(`‚ùå –§—É–Ω–∫—Ü–∏—è ${funcName}: –æ—à–∏–±–∫–∞ - ${error.message}`);
      }
    });
    
    result.success = functionsAvailable >= 3;
    
  } catch (error) {
    result.issues.push(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è UI: ${error.message}`);
  }
  
  Logger.log(`UI –∫–Ω–æ–ø–∫–∏: ${result.success ? 'OK' : '–¢–†–ï–ë–£–ï–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø'}`);
  return result;
}

/**
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç UI —Å–∏—Å—Ç–µ–º—É
 */
function repairUISystem() {
  const result = { success: false, actions: [] };
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ onOpen —Ñ—É–Ω–∫—Ü–∏–∏
    try {
      const func = eval('onOpen');
      if (typeof func === 'function') {
        result.actions.push(`‚úÖ –§—É–Ω–∫—Ü–∏—è onOpen –¥–æ—Å—Ç—É–ø–Ω–∞`);
        
        // –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å onOpen
        onOpen();
        result.actions.push(`‚úÖ –§—É–Ω–∫—Ü–∏—è onOpen –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
      } else {
        result.actions.push(`‚ùå –§—É–Ω–∫—Ü–∏—è onOpen –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      }
    } catch (error) {
      result.actions.push(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è onOpen: ${error.message}`);
    }
    
    result.success = true;
    
  } catch (error) {
    result.actions.push(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è UI: ${error.message}`);
  }
  
  return result;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
 */
function generateRepairReport(repairResults) {
  Logger.log('\nüîß –û–¢–ß–ï–¢ –û –î–ò–ê–ì–ù–û–°–¢–ò–ö–ï –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ò');
  Logger.log('=' .repeat(60));
  Logger.log(`üïê –í—Ä–µ–º—è: ${repairResults.timestamp}`);
  Logger.log(`üìä –°—Ç–∞—Ç—É—Å: ${repairResults.success ? '‚úÖ –£–°–ü–ï–®–ù–û' : '‚ùå –° –û–®–ò–ë–ö–ê–ú–ò'}`);
  
  Logger.log('\nüìã –í–´–ü–û–õ–ù–ï–ù–ù–´–ï –®–ê–ì–ò:');
  repairResults.steps.forEach((step, index) => {
    Logger.log(`   ${index + 1}. ${step}`);
  });
  
  if (repairResults.repaired.length > 0) {
    Logger.log('\nüîß –í–´–ü–û–õ–ù–ï–ù–ù–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:');
    repairResults.repaired.forEach(action => {
      Logger.log(`   ${action}`);
    });
  }
  
  if (repairResults.errors.length > 0) {
    Logger.log('\n‚ùå –û–®–ò–ë–ö–ò:');
    repairResults.errors.forEach(error => {
      Logger.log(`   ${error}`);
    });
  }
  
  Logger.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
  Logger.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Google Drive –∏ Sheets');
  Logger.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  Logger.log('   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–º–∞–Ω–¥–æ–π /start');
  Logger.log('   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫');
}